---
# This rule set allows us to accept high-priority packets from known subnets
# like Kubernetes pod and service networks.
- name: Always accept traffic from known inbound subnets
  ansible.builtin.iptables:
    table: filter
    chain: Always
    jump: ACCEPT
    source: "{{ item }}"
  become: true
  loop: "{{ firewall_always_high_priority_inbound_subnets }}"

# This rule set allows us to accept high-priority packets from known inbound
# services like NTP with relatively low packet processing delay.
- name: Always accept traffic from known inbound service ports
  ansible.builtin.iptables:
    table: filter
    chain: Always
    jump: ACCEPT
    destination_port: "{{ item.port }}"
    protocol: "{{ item.protocol }}"
    comment: "{{ item.service }}"
  loop: "{{ firewall_always_high_priority_inbound_services }}"
  become: true

# This rule is a performance optimization for tcp connections.
# TCP protocols will exchange many packets back and forth over the same
# connection.  This rule makes the assumption that if the first packet of the 
# connection is accepted as OK, then it stands to reason that all other packets
# received from established or related connections would also be marked OK.
# This allows us to short circuit the firewall rule execution for those
# packets.
- name: Always accept traffic from established and related sessions
  ansible.builtin.iptables:
    table: filter
    chain: Always
    jump: ACCEPT
    ctstate:
      - ESTABLISHED
      - RELATED
  become: true
  notify:
    - persist iptables

- name: Always accept traffic from the loopback interface
  ansible.builtin.iptables:
    table: filter
    chain: Always
    jump: ACCEPT
    in_interface: lo
  become: yes
  notify:
    - persist iptables
