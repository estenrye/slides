- hosts: localhost
  connection: local
  vars:
    package_name: softhsm
    package_version: 2.6.1
    package_revision: 1
    package_arch: amd64
    source_directory: /tmp/package/SoftHSMv2-{{ package_version }}
    package_directory: /tmp/package/{{ package_name }}_{{ package_version }}-{{ package_revision}}_{{ package_arch }}
    package: "{{ package_name }}_{{ package_version }}-{{ package_revision}}_{{ package_arch }}"
    package_section: utils
    package_depends:
      - openssl (>= 1.0.0)
      - libp11-kit-dev
    package_short_description: SoftHSM is a software implementation of a generic cryptographic device with a PKCS#11 interface.
    package_long_description: |-
      OpenDNSSEC handles and stores its cryptographic keys via the PKCS#11
      interface. This interface specifies how to communicate with cryptographic
      devices such as HSM:s (Hardware Security Modules) and smart cards. The
      purpose of these devices is, among others, to generate cryptographic keys
      and sign information without revealing private-key material to the outside
      world. They are often designed to perform well on these specific tasks
      compared to ordinary processes in a normal computer.
      A potential problem with the use of the PKCS#11 interface is that it might
      limit the wide spread use of OpenDNSSEC, since a potential user might not
      be willing to invest in a new hardware device. To counter this effect,
      OpenDNSSEC is providing a software implementation of a generic
      cryptographic device with a PKCS#11 interface, the SoftHSM. SoftHSM is
      designed to meet the requirements of OpenDNSSEC, but can also work
      together with other cryptographic products because of the PKCS#11
      interface.
    maintainer_name: Ryezone Labs
    maintainer_email: info@ryezone.com
    maintainer_gpg_passphrase: "{{ gpg_passphrase }}"
  tasks:
  - name: Install Prerequisite Build Packages
    ansible.builtin.package:
      name:
        - autoconf
        - automake
        - botan
        - build-essential
        - dpkg-sig
        - libp11-kit-dev
        - libssl-dev
        - libtool
        - pkg-config
        - unzip
    become: true
    tags:
      - package-install

  - name: Create /tmp/package directory
    ansible.builtin.file:
      path: /tmp/package
      state: directory

  - name: Download Source
    ansible.builtin.get_url:
      url: https://github.com/opendnssec/SoftHSMv2/archive/refs/tags/{{ package_version }}.zip
      dest: /tmp/package/SoftHSM.zip

  - name: clean build
    ansible.builtin.file:
      path: "{{ source_directory }}"
      state: absent
    tags:
      - clean_source_directory

  - name: Unarchive Source
    ansible.builtin.unarchive:
      src: /tmp/package/SoftHSM.zip
      dest: /tmp/package

  - name: Run autogen.sh
    ansible.builtin.command:
      chdir: "{{ source_directory }}"
      argv:
       - sh
       - ./autogen.sh

  - name: Run configure
    ansible.builtin.command:
      chdir: "{{ source_directory }}"
      argv:
        - ./configure
        - --disable-dependency-tracking
        - --enable-64bit
        - --prefix={{ package_directory }}
        - --exec-prefix={{ package_directory }}
        - --with-crypto-backend=openssl
        - --with-openssl=/usr
        - --with-p11-kit={{ package_directory }}/usr/share/p11-kit/modules

  - name: Replace Bad DEFAULT_PKCS11_LIB from config.h
    ansible.builtin.lineinfile:
      path: "{{ source_directory }}/config.h"
      regexp: '^#define DEFAULT_PKCS11_LIB'
      line: '#define DEFAULT_PKCS11_LIB "/lib/softhsm/libsofthsm2.so"'

  - name: Replace Bad DEFAULT_SOFTHSM2_CONF from config.h
    ansible.builtin.lineinfile:
      path: "{{ source_directory }}/config.h"
      regexp: '^#define DEFAULT_SOFTHSM2_CONF'
      line: '#define DEFAULT_SOFTHSM2_CONF "/etc/softhsm2.conf"'

  - name: Replace Bad DEFAULT_TOKENDIR from config.h
    ansible.builtin.lineinfile:
      path: "{{ source_directory }}/config.h"
      regexp: '^#define DEFAULT_TOKENDIR'
      line: '#define DEFAULT_TOKENDIR "/var/lib/softhsm/tokens/"'

  - name: Compile Source
    ansible.builtin.command:
      chdir: "{{ source_directory }}"
      argv:
        - make

  - name: Create package Directory
    ansible.builtin.file:
      path: "{{ package_directory }}"
      state: directory

  - name: Package binaries
    ansible.builtin.command:
      chdir: "{{ source_directory }}"
      argv:
        - make
        - install

  - name: Create Debian Directory
    ansible.builtin.file:
      path: "{{ package_directory }}/DEBIAN"
      state: directory

  - name: Create Debian Package Control File
    ansible.builtin.template:
      src: templates/control.j2
      dest: "{{ package_directory }}/DEBIAN/control"

  - name: Remove Prefix from conf files
    ansible.builtin.lineinfile:
      path: "{{ item }}"
      regexp: ^directories\.tokendir =
      line: directories.tokendir = /var/lib/softhsm/tokens/
    loop:
      - "{{ package_directory }}/etc/softhsm2.conf"
      - "{{ package_directory }}/etc/softhsm2.conf.sample"

  - name: Remove Prefix from module
    ansible.builtin.lineinfile:
      path: "{{ package_directory }}/usr/share/p11-kit/modules/softhsm2.module"
      regexp: "^module:"
      line: "module: /lib/softhsm/libsofthsm2.so"

  - name: Remove Prefix from libdir
    ansible.builtin.lineinfile:
      path: "{{ package_directory }}/lib/softhsm/libsofthsm2.la"
      regexp: ^libdir=
      line: libdir='/lib/softhsm'

  - name: Create Debian Package
    ansible.builtin.command:
      chdir: /tmp/package
      argv:
        - dpkg-deb
        - --build
        - --root-owner-group
        - "{{ package }}"

  # - name: Sign Package
  #   block:
  #     - name: Sign Package
  #       ansible.builtin.command:
  #       chdir: /tmp/package
  #       argv:
  #         - dpkg-sig
  #         - --sign
  #         - builder
  #         - -m
  #         - "{{ maintainer_name }}"
