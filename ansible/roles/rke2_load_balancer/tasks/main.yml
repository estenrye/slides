---
- name: Create Configuration Directories
  ansible.builtin.file:
    path: "{{ item }}"
    group: root
    owner: root
    state: directory
  loop:
    - /etc/keepalived
  become: true

- name: Create Configuration Files
  ansible.builtin.template:
    src: keepalived.conf.j2
    dest: /etc/keepalived/keepalived.conf
    mode: "644"
    owner: root
    group: root
  notify: restart keepalived
  become: true

- name: Create Check File
  ansible.builtin.template:
    src: check_apiserver.sh.j2
    dest: /etc/keepalived/check_apiserver.sh
    mode: "755"
    owner: root
    group: root
  become: true

- name: Install Packages
  ansible.builtin.package:
    name: keepalived
  become: true

- name: Ensure keepalived is enabled on boot.
  ansible.builtin.service:
    name: keepalived
    enabled: yes
  become: true

- name: Ensure keepalived is started.
  ansible.builtin.service:
    name: keepalived
    state: started
  become: true

- ansible.builtin.set_fact:
    rke2_ingress_servers: "{{ groups['node'] | map('extract', hostvars ) | json_query(jmespath_query_string) }}"
    rke2_controlplane_servers: "{{ groups['controlplane'] | map('extract', hostvars ) | json_query(jmespath_query_string) }}"
  vars:
    jmespath_query_string: 'sort_by([].{ name: proxmox_name, address: proxmox_name }, &name)[]'

- ansible.builtin.assert:
    that:
      - rke2_ingress_servers | length >= 1
      - rke2_controlplane_servers | length >= 1

- name: set facts
  ansible.builtin.include_vars:
    file: "{{ haproxy_role }}.yml"
  when:
    - haproxy_role != 'default'

- name: Ensure HAProxy is installed.
  package:
    name: haproxy
    state: present
  become: true

- name: Ensure HAProxy is enabled (so init script will start it on Debian).
  lineinfile:
    dest: /etc/default/haproxy
    regexp: "^ENABLED.+$"
    line: "ENABLED=1"
    state: present
  when: ansible_os_family == 'Debian'
  become: true

- name: Copy HAProxy configuration in place.
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    mode: 0644
    validate: haproxy -f %s -c -q
  notify: restart haproxy
  become: true

- name: Ensure HAProxy is started and enabled on boot.
  service:
    name: haproxy
    state: started
    enabled: yes
  become: true
