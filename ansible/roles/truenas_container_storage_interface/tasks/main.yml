- name: Add chart repo for democratic-csi
  community.kubernetes.helm_repository:
    name: democratic-csi
    repo_url: "{{ democratic_csi.helm.repo }}"
  tags:
    - container_storage_interface

- name: Deploy democratic-csi chart
  community.kubernetes.helm:
    name: "{{ democratic_csi.helm.name }}"
    chart_ref: democratic-csi/{{ democratic_csi.helm.chart }}
    chart_version: "{{ democratic_csi.helm.version }}"
    release_namespace: "{{ democratic_csi.helm.namespace }}"
    create_namespace: true
    values:
      driver:
        config:
          driver: freenas-api-iscsi
          instance_id:
          httpConnection:
            protocol: https
            host: "{{ truenas_backend }}"
            port: 443
            apiKey: "{{ truenas_api_key }}"
            username: root
            allowInsecure: false
            apiVersion: 2
          zfs:
            # total volume name (zvol/<datasetParentName>/<pvc name>) length cannot exceed 63 chars
            # https://www.ixsystems.com/documentation/freenas/11.2-U5/storage.html#zfs-zvol-config-opts-tab
            # standard volume naming overhead is 46 chars
            # datasetParentName should therefore be 17 chars or less
            datasetParentName: "{{ truenas_dataset_root }}/v"
            # do NOT make datasetParentName and detachedSnapshotsDatasetParentName overlap
            # they may be siblings, but neither should be nested in the other
            detachedSnapshotsDatasetParentName: "{{ truenas_dataset_root }}/s"
            # "" (inherit), lz4, gzip-9, etc
            zvolCompression:
            # "" (inherit), on, off, verify
            zvolDedup:
            zvolEnableReservation: false
            # 512, 1K, 2K, 4K, 8K, 16K, 64K, 128K default is 16K
            zvolBlocksize:
          iscsi:
            targetPortal: "{{ truenas_backend }}:3260"
            targetPortals: []
            # leave empty to omit usage of -I with iscsiadm
            interface:

            # MUST ensure uniqueness
            # full iqn limit is 223 bytes, plan accordingly
            # default is "{{ name }}"
            #nameTemplate: "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}-{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
            namePrefix: csi-
            nameSuffix: "-{{ platform_environment }}"
            # add as many as needed
            targetGroups:
              # get the correct ID from the "portal" section in the UI
              - targetGroupPortalGroup: 1
                # get the correct ID from the "initiators" section in the UI
                targetGroupInitiatorGroup: 1
                # None, CHAP, or CHAP Mutual
                targetGroupAuthType: None
                # get the correct ID from the "Authorized Access" section of the UI
                # only required if using Chap
                targetGroupAuthGroup:
            extentInsecureTpc: true
            extentXenCompat: false
            extentDisablePhysicalBlocksize: true
            # 512, 1024, 2048, or 4096,
            extentBlocksize: 512
            # "" (let FreeNAS decide, currently defaults to SSD), Unknown, SSD, 5400, 7200, 10000, 15000
            extentRpm: "SSD"
            # 0-100 (0 == ignore)
            extentAvailThreshold: 0
      # https://kubernetes-csi.github.io/docs/csi-driver-object.html
      csiDriver:
        name: "org.democratic-csi.iscsi"
      # add note here about volume expansion requirements
      storageClasses:
      - name: truenas-iscsi-csi
        defaultClass: true
        reclaimPolicy: Delete
        volumeBindingMode: Immediate
        allowVolumeExpansion: true
        parameters:
          # for block-based storage can be ext3, ext4, xfs
          # for nfs should be nfs
          fsType: ext4

          # if true, volumes created from other snapshots will be
          # zfs send/received instead of zfs cloned
          # detachedVolumesFromSnapshots: "false"

          # if true, volumes created from other volumes will be
          # zfs send/received instead of zfs cloned
          # detachedVolumesFromVolumes: "false"

        mountOptions: []
        secrets:
          provisioner-secret:
          controller-publish-secret:
          node-stage-secret:
      #      # any arbitrary iscsiadm entries can be add by creating keys starting with node-db.<entry.name>
      #      # if doing CHAP
      #      node-db.node.session.auth.authmethod: CHAP
      #      node-db.node.session.auth.username: foo
      #      node-db.node.session.auth.password: bar
      #
      #      # if doing mutual CHAP
      #      node-db.node.session.auth.username_in: baz
      #      node-db.node.session.auth.password_in: bar
          node-publish-secret:
          controller-expand-secret:

      # if your cluster supports snapshots you may enable below
      volumeSnapshotClasses: []
      #- name: freenas-iscsi-csi
      #  parameters:
      #  # if true, snapshots will be created with zfs send/receive
      #  # detachedSnapshots: "false"
      #  secrets:
      #    snapshotter-secret:
  tags:
    - container_storage_interface
