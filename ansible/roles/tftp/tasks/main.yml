- name: Create tftp Group if it does not exist
  ansible.builtin.group:
    gid: "{{ tftp_gid | int }}"
    name: "{{ tftp_group }}"
  become: true

- name: Create tftp User if it does not exist
  ansible.builtin.user:
    uid: "{{ tftp_uid | int }}"
    name: "{{ tftp_user }}"
    group: "{{ tftp_group }}"
  become: true

- name: set ownership of tftp_directory
  ansible.builtin.file:
    state: directory
    path: "{{ tftp_dir }}"
    owner: "{{ tftp_user }}"
    group: "{{ tftp_group }}"
    mode: 0755
  become: true
  loop_control:
    loop_var: tftp_dir
  loop:
    - "{{ tftp_directory }}"
    - "{{ tftp_directory }}/firmware"

- name: Install tftp-hpa package
  ansible.builtin.package:
    name:
      - tftp-hpa
      - tftpd-hpa

  become: true

- name: Create Configuration Files
  ansible.builtin.template:
    src: tftpd-hpa.conf.j2
    dest: /etc/default/tftpd-hpa
  notify: restart tftpd-hpa
  become: true

- name: Ensure keepalived is enabled on boot.
  ansible.builtin.service:
    name: tftpd-hpa
    enabled: yes
  become: true

- name: Ensure keepalived is started.
  ansible.builtin.service:
    name: tftpd-hpa
    state: started
  become: true

- name: Download IPXE firmware
  ansible.builtin.get_url:
    url: "{{ ipxe_firmware.src }}"
    dest: "{{ ipxe_firmware.dest }}"
    owner: "{{ tftp_user }}"
    group: "{{ tftp_group }}"
  become: true
  loop_control:
    loop_var: ipxe_firmware
  loop:
    - src: http://boot.ipxe.org/undionly.kpxe
      dest: "{{ tftp_directory }}/firmware/undionly.kpxe"
    - src: http://boot.ipxe.org/ipxe.efi
      dest: "{{ tftp_directory }}/firmware/ipxe.efi"

