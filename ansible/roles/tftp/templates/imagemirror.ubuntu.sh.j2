#!/bin/bash

fatal() {
  echo "$1"
  exit 1
}

warn() {
  echo "$1"
}

# Find a source mirror near you which supports rsync on
# https://launchpad.net/ubuntu/+cdmirrors
# rsync://<iso-country-code>.rsync.releases.ubuntu.com/releases should always work
RSYNCSOURCE={{ image_mirror.mirror }}

# Define where you want the mirror-data to be on your mirror
BASEDIR={{ image_mirror_dir }}/ubuntu/

if [ ! -d ${BASEDIR} ]; then
  warn "${BASEDIR} does not exist yet, trying to create it..."
  mkdir -p ${BASEDIR} || fatal "Creation of ${BASEDIR} failed."
fi

rsync --verbose --recursive --times --links --safe-links --hard-links \
  --stats --delete-after \
  ${RSYNCSOURCE} ${BASEDIR} || fatal "Failed to rsync from ${RSYNCSOURCE}."

date -u > ${BASEDIR}/.trace/$(hostname -f)

LIVE_KERNEL_ROOT='{{ image_mirror_dir }}/live/ubuntu/live-server-amd64'
ISO_MNT_ROOT=/mnt/iso
IMAGE_ROOT='{{ image_mirror_dir }}/ubuntu'
VERSION_PATTERN='[0-9][0-9]\.[0-9][0-9]$'
ISO_PATTERN='live-server-amd64\.iso$'

for ISOFILE in `ls ${IMAGE_ROOT} | grep ${VERSION_PATTERN} | xargs -I% find ${IMAGE_ROOT}/%/ -print | grep ${ISO_PATTERN}`
do
  VERSION=`basename $(dirname $ISOFILE)`

  # if [ -d "${LIVE_KERNEL_ROOT}/${VERSION}" ]; then
  #   echo "${LIVE_KERNEL_ROOT}/${VERSION} already exists, skipping..."
  #   continue
  # fi

  echo "Creating directory ${LIVE_KERNEL_ROOT}/${VERSION}"
  mkdir -p "${LIVE_KERNEL_ROOT}/${VERSION}"
  rm -f ${LIVE_KERNEL_ROOT}/${VERSION}/ubuntu-live-server-amd64.iso

  echo "Linking ${ISOFILE} to ${LIVE_KERNEL_ROOT}/${VERSION}/ubuntu-live-server-amd64.iso"
  ln -s ${ISOFILE} ${LIVE_KERNEL_ROOT}/${VERSION}/ubuntu-live-server-amd64.iso

  echo "Creating directory ${ISO_MNT_ROOT}/${VERSION}"
  mkdir -p "${ISO_MNT_ROOT}/${VERSION}"

  echo "Mounting ${ISOFILE} to directory ${ISO_MNT_ROOT}/${VERSION}"
  mount -o loop,ro ${ISOFILE} ${ISO_MNT_ROOT}/${VERSION}

  echo "Copying ${ISO_MNT_ROOT}/${VERSION}/casper to directory ${LIVE_KERNEL_ROOT}/${VERSION}"
  cp -r ${ISO_MNT_ROOT}/${VERSION}/casper ${LIVE_KERNEL_ROOT}/${VERSION}

  echo "Unmounting ${ISO_MNT_ROOT}/${VERSION}"
  umount ${ISO_MNT_ROOT}/${VERSION}
done
