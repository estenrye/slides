- name: Ensure manifests directory exists
  ansible.builtin.file:
    state: directory
    dest: /tmp/manifests
    owner: automation-user
    group: automation-user
    mode: 0755

- name: Ensure pki directory exists
  ansible.builtin.file:
    state: directory
    dest: /tmp/pki
    owner: automation-user
    group: automation-user
    mode: 0700

- name: Get cert-manager CRDs
  ansible.builtin.get_url:
    url: "{{ cert_manager_crd_uri }}"
    dest: /tmp/manifests/cert-manager_crds.yml
    owner: automation-user
    group: automation-user
    mode: 0644
  become: true

- name: Install CRDs for cert-manager
  community.kubernetes.k8s:
    state: present
    src: /tmp/manifests/cert-manager_crds.yml

- name: Add chart repo for cert-manager
  community.kubernetes.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io

- name: Deploy cert-manager chart
  community.kubernetes.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    chart_version: "{{ cert_manager_helm_chart_version }}"
    release_namespace: cert-manager
    create_namespace: true
    values:
      prometheus:
        enabled: "{{ cert_manager_enable_prometheus }}"
        servicemonitor:
          enabled: true

- name: pause for for node to initialize CRDs.
  ansible.builtin.pause:
    minutes: 1

- name: Configure Cloudflare API Key for cert-manager
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cert-manager-issuer-secret
        namespace: cert-manager
      type: Opaque
      stringData:
        api-token: "{{ cloudflare_api_token }}"
        tls-key: "{{ cert_manager_acme_tls_key }}"

- name: Configure LetsEncrypt Cloudflare Issuer for cert-manager
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-cloudflare-dns01
        namespace: cert-manager
      spec:
        acme:
          email: "{{ cert_manager_acme_email }}"
          server: "{{ public_acme_server }}"
          preferredChain: "ISRG Root X1"
          privateKeySecretRef:
            name: cert-manager-issuer-secret
            key: tls-key
          solvers:
            - dns01:
                cloudflare:
                  apiTokenSecretRef:
                    name: cert-manager-issuer-secret
                    key: api-token
              selector:
                dnsZones:
                - "{{ kubernetes_zone }}"

- name: Configure Smallstep ACME Issuer for cert-manager
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: smallstep-cloudflare-dns01
        namespace: cert-manager
      spec:
        acme:
          email: "{{ cert_manager_acme_email }}"
          server: "{{ private_acme_server }}"
          preferredChain: "ISRG Root X1"
          privateKeySecretRef:
            name: cert-manager-issuer-secret
            key: tls-key
          solvers:
            - dns01:
                cloudflare:
                  apiTokenSecretRef:
                    name: cert-manager-issuer-secret
                    key: api-token
              selector:
                dnsZones:
                - "{{ kubernetes_zone }}"
            - http01:
                ingress:
                  class: nginx
