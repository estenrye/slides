---
- hosts: ubuntu
  connection: local
  tasks:
    - name: Install Prerequisites
      ansible.builtin.package:
        name:
          - genisoimage
      become: true
      tags:
        - install_prerequisites

    - name: Clean cidata directory
      ansible.builtin.file:
        state: absent
        path: '{{ item }}'
      loop:
        - /tmp//cidata/{{ inventory_hostname }}
        - /output/{{ inventory_hostname }}
      become: true

    - name: Make cidata directory
      ansible.builtin.file:
        state: directory
        path: '{{ item }}'
      loop:
        - /tmp/cidata/{{ inventory_hostname }}
        - /output/{{ inventory_hostname }}
      become: true

    - name: Generate automation-user password
      ansible.builtin.set_fact:
        password_plaintext: '{{ user.password_plaintext }}'
        password_salt: '{{ user.password_salt }}'

    - name: Generate automation-user password ciphertext
      ansible.builtin.command:
        cmd: openssl passwd -6 -salt '{{ password_salt }}' -stdin
        stdin: '{{ password_plaintext }}'
      register: generated_ciphertext

    - name: Set password_ciphertext
      ansible.builtin.set_fact:
        password_ciphertext: '{{ generated_ciphertext.stdout }}'

    - name: Write Packer user-data Template
      ansible.builtin.template:
        src: "{{ user_data_template }}"
        dest: /tmp/cidata/{{ inventory_hostname }}/user-data
      become: true

    - name: Touch Packer meta-data Template
      ansible.builtin.file:
        path: /tmp/cidata/{{ inventory_hostname }}/meta-data
        state: touch
      become: true

    - name: build cidata iso
      ansible.builtin.command:
        argv:
          - genisoimage
          - -output
          - /output/{{ inventory_hostname }}/cidata.iso
          - -volid
          - cidata
          - -joliet
          - -input-charset
          - utf-8
          - -rock
          - /tmp/cidata/{{ inventory_hostname }}/user-data
          - /tmp/cidata/{{ inventory_hostname }}/meta-data
      become: true

    - name: Get iso checksum
      ansible.builtin.stat:
        path: /output/{{ inventory_hostname }}/cidata.iso
        get_checksum: true
      register: checksum
      become: true

    - name: Set cidata iso checksum fact
      ansible.builtin.set_fact:
        cidata_iso_checksum: "{{ checksum.stat.checksum }}"

    - name: Write iso checksum
      ansible.builtin.copy:
        content: "{{ cidata_iso_checksum }}"
        dest: /output/{{ inventory_hostname }}/cidata.sha1
      become: true

    - name: Write iso checksum
      ansible.builtin.copy:
        content: "{{ inventory_date }}"
        dest: /output/{{ inventory_hostname }}/inventory_date
      become: true
